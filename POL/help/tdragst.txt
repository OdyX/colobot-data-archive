\b;Æwiczenie
Dotrzyj jak najszybciej do platformy koñcowej (25 m przed Tob¹), u¿ywaj¹c instrukcji \c;motor( , )\n;. Przed koñcem ruchu musisz stopniowo zwalniaæ, aby robot nie wpad³ na \l;miny\u object\mine; i nie wybuch³.

Równie dobrze mo¿esz napisaæ jedynie instrukcjê \c;\l;move\u cbot\move;(25);\n;, która wykona to samo zadanie, jednak celem tego æwiczenia jest nauka u¿ywania instrukcji \c;\l;motor\u cbot\motor;\n;.

Instrukcja ta potrzebuje dwóch wartoci:
1) Prêdkoci lewego silnika.
2) Prêdkoci prawego silnika.

\s;\c;	motor( lewy, prawy );
\n;
Wartoci musz¹ siê zawieraæ w przedziale od -1 do 1:
-1 = pe³ny ci¹g wstecz
 0 = silnik zatrzymany
 1 = pe³ny ci¹g naprzód

Na przyk³ad instrukcja \c;motor(0.5, 0.5);\n; bêdzie porusza³a robotem naprzód z po³ow¹ prêdkoci, a¿ do podania silnikom nowych instrukcji.

Po napotkaniu instrukcji \c;motor(0.5, 0.6);\n;, robot bêdzie siê porusza³ do przodu z po³ow¹ prêdkoci, wykonuj¹c w tym samym czasie niewielki obrót w lewo: prawy silnik porusza siê nieco szybciej (\c;0.6\n;) ni¿ lewy (\c;0.5\n;).

\b;Ogólny algorytm
Aby przejechaæ dok³adnie 25 metrów, nale¿y jechaæ z pe³n¹ prêdkoci¹ przez pierwsze 23 metry, a nastêpnie stopniowo zmniejszaæ prêdkoæ przez ostatnie dwa metry.
\l;Zmienna\u cbot\var; \l;position\u cbot\object; podaje bie¿¹c¹ pozycjê robota, a instrukcja \c;\l;distance\u cbot\dist;( , );\n; oblicza odleg³oæ miêdzy dwoma punktami. Najlepszy sposób na poznanie w³asnej pozycji, polega na zachowaniu bie¿¹cej pozycji przed startem w \l;zmiennej\u cbot\var;, nazwanej na przyk³ad \c;start\n;. Nastêpnie mo¿na obliczyæ odleg³oæ miêdzy pozycj¹ startow¹ i bie¿¹c¹ pozycj¹ za pomoc¹ instrukcji \c;distance(position, start)\n;.

\b;Program
1) zadeklaruj zmienne
\s;\c;	point start;
\s;	float len;
\n;
2) zapisz pozycjê startow¹
\s;\c;	start = position;
\n;
3) na pocz¹tek z pe³n¹ moc¹:
\s;\c;	motor(1, 1);
\n;
4) wykonaj pêtlê nieskoñczon¹ \c;\l;while\u cbot\while;\n;:
\s;\c;	while ( true )
\s;	{
\s;		len = distance(position, start);
\s;		if ( len > 25-2 )
\s;		{
\s;			motor( mniej ni¿ poprzednio! );
\s;		}
\s;	}
\n;
Tak d³ugo jak odleg³oæ pomiêdzy pozycj¹ startow¹ i bie¿¹c¹ jest mniejsza od 23m, instrukcje w klamrach po instrukcji \c;\l;if\u cbot\if;\n; nie bêd¹ wykonywane, wiêc silniki utrzymaj¹ maksymaln¹ prêdkoæ nadan¹ im instrukcj¹ \c;\l;motor\u cbot\motor;(1,1);\n;.

Aby stopniowo zwalniaæ, prêdkoæ silników musi byæ proporcjonalna do pozosta³ej odleg³oci:
o  zosta³y \c;2.0\n; metry  -> prêdkoæ = \c;1.00\n; (maksymalna)
o  zosta³o \c;1.5\n; metra  -> prêdkoæ = \c;0.75\n;
o  zosta³  \c;1.0\n; metr   -> prêdkoæ = \c;0.50\n;
o  zosta³o \c;0.5\n; metra  -> prêdkoæ = \c;0.25\n;
o  zosta³o \c;0.0\n; metrów -> prêdkoæ = \c;0.00\n; (zatrzymanie)

\image tdragst1 12 6;
Do obliczenia prêdkoci, która zostanie podana silnikom mo¿esz u¿yæ nastêpuj¹cego \l;wyra¿enia\u cbot\expr;: \c;(25-len)/2\n;.

Do Ciebie nale¿y z³o¿enie tego wszystkiego razem i przetestowanie programu.

\t;Uwaga
Mo¿esz u¿ywaæ wartoci wiêkszych od 1 dla instrukcji \c;\l;motor\u cbot\motor;();\n;, ale robot nie bêdzie porusza³ siê szybciej.

\t;Zobacz równie¿
\l;Programowanie\u cbot;, \l;typy\u cbot\type; i \l;kategorie\u cbot\category;.
